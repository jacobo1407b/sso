GetUsers:
  get:
    summary: Obtener lista de usuarios con paginación y filtro por nombre de usuario
    tags:
      - Users
    security:
      - OAuth2: []
    parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          default: 20
      - name: user
        in: query
        required: false
        schema:
          type: string
    responses:
      '200':
        description: Lista de usuarios obtenida exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 200
                statusCode:
                  type: integer
                  example: 200
                data:
                  type: array
                  items:
                    $ref: '../schemas/user.yaml#/components/schemas/User'
                page:
                  type: integer
                  example: 1
                pageSize:
                  type: integer
                  example: 20
                totalCount:
                  type: integer
                  example: 124
PostUser:
  post:
    summary: Crear un nuevo usuario y asignarlo a una unidad y sucursal
    tags:
      - Users
    security:
      - OAuth2: []
    parameters:
      - name: unid
        in: query
        required: true
        schema:
          type: string
      - name: branch
        in: query
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - name
              - last_name
              - email
              - password
              - second_last_name
              - hire_date
              - job_title
              - department
            properties:
              username:
                type: string
                example: "jacobo.hernandez"
              name:
                type: string
                example: "Jacobo"
              last_name:
                type: string
                example: "Hernández"
              second_last_name:
                type: string
                example: "Mendieta"
              email:
                type: string
                format: email
                example: "jacobo@example.com"
              password:
                type: string
                format: password
                example: "********"
              hire_date:
                type: string
                format: date
                example: "2023-05-01"
              job_title:
                type: string
                example: "Arquitecto de soluciones"
              department:
                type: string
                example: "Tecnología"
    responses:
      '201':
        description: Usuario creado exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 201
                statusCode:
                  type: integer
                  example: 201
                data:
                  allOf:
                    - $ref: '../schemas/user.yaml#/components/schemas/User'
                    - type: object
                      properties:
                        preferences:
                          $ref: '../schemas/user.yaml#/components/schemas/Preferences'
                        userBusiness:
                          $ref: '../schemas/user.yaml#/components/schemas/UserBusiness'
                        location:
                          $ref: '../schemas/user.yaml#/components/schemas/Location'
GetUserOne:
  summary: Obtener un usuario por su identificador
  tags:
    - Users
  security:
    - OAuth2: []
  parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    '200':
      description: Usuario obtenido exitosamente
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              statusCode:
                type: integer
                example: 200
              data:
                allOf:
                  - $ref: '../schemas/user.yaml#/components/schemas/User'
                  - type: object
                    properties:
                      preferences:
                        $ref: '../schemas/user.yaml#/components/schemas/Preferences'
                      userBusiness:
                        $ref: '../schemas/user.yaml#/components/schemas/UserBusiness'
                      location:
                        $ref: '../schemas/user.yaml#/components/schemas/Location'

PostUserImage:
  put:
    summary: Subir y actualizar imagen de perfil de un usuario
    tags:
      - Users
    security:
      - OAuth2: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: pub
        in: query
        required: false
        schema:
          type: string
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
    responses:
      '201':
        description: Imagen de perfil actualizada exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 201
                statusCode:
                  type: integer
                  example: 201
                data:
                  allOf:
                    - $ref: '../schemas/user.yaml#/components/schemas/User'
                    - type: object
                      properties:
                        preferences:
                          $ref: '../schemas/user.yaml#/components/schemas/Preferences'
                        userBusiness:
                          $ref: '../schemas/user.yaml#/components/schemas/UserBusiness'
                        location:
                          $ref: '../schemas/user.yaml#/components/schemas/Location'
PutUser:
  summary: Actualizar información básica de un usuario
  tags:
    - Users
  security:
    - OAuth2: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - last_name
            - second_last_name
            - phone
            - job_title
            - department
            - biografia
          properties:
            name:
              type: string
              example: "Jacobo"
            last_name:
              type: string
              example: "Hernández"
            second_last_name:
              type: string
              example: "Mendieta"
            phone:
              type: string
              example: "+52 55 1234 5678"
            job_title:
              type: string
              example: "Arquitecto de soluciones"
            department:
              type: string
              example: "Tecnología"
            biografia:
              type: string
              example: "Explorador de la intersección entre arte, tecnología y narrativa existencial."
  responses:
    '201':
      description: Usuario actualizado exitosamente
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 201
              statusCode:
                type: integer
                example: 201
              data:
                allOf:
                  - $ref: '../schemas/user.yaml#/components/schemas/User'
                  - type: object
                    properties:
                      preferences:
                        $ref: '../schemas/user.yaml#/components/schemas/Preferences'
                      userBusiness:
                        $ref: '../schemas/user.yaml#/components/schemas/UserBusiness'
                      location:
                        $ref: '../schemas/user.yaml#/components/schemas/Location'
PostResetPassword:
  put:
    summary: Restablecer la contraseña de un usuario
    tags:
      - Users
    security:
      - OAuth2: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - pass
              - last_pass
            properties:
              pass:
                type: string
                format: password
                example: "nuevaContraseña123"
              last_pass:
                type: string
                format: password
                example: "contraseñaAnterior456"
    responses:
      '201':
        description: Contraseña actualizada exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 201
                statusCode:
                  type: integer
                  example: 201
                data:
                  type: string
                  nullable: true
                  example: null
PutUserPreferences:
  put:
    summary: Actualizar preferencias de usuario
    tags:
      - Users
    security:
      - OAuth2: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - theme
              - lang
              - timezone
              - notifications
            properties:
              theme:
                type: string
                example: "dark"
              lang:
                type: string
                example: "es"
              timezone:
                type: string
                example: "America/Mexico_City"
              notifications:
                type: boolean
                example: true
    responses:
      '201':
        description: Preferencias actualizadas exitosamente
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  example: 201
                statusCode:
                  type: integer
                  example: 201
                data:
                  type: string
                  nullable: true
                  example: null
