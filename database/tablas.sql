CREATE EXTENSION pgcrypto;

CREATE TABLE "public"."SSO_AUTH_USER_2FA" (
  ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  ASCII TEXT NOT NULL,
  HEX TEXT NOT NULL,
  BASE32 VARCHAR(800) NOT NULL,
  OTPAUTH_URL TEXT NOT NULL,
  VERIFIED_DATE TIMESTAMP,
  VERIFIED_STATUS VARCHAR(20),
  FAILED_ATTEMPTS INTEGER DEFAULT 0,
  LAST_ATTEMPT_DATE TIMESTAMP,
  EXPIRES_DATE TIMESTAMP,
  CREATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT now(),
  UPDATED_DATE TIMESTAMP WITH TIME ZONE DEFAULT now()
);


CREATE TABLE "public"."SSO_AUTH_USER_PREFERENCES_T" (
  ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  THEME VARCHAR(10),
  NOTIFICATIONS BOOLEAN DEFAULT TRUE,
  TIMEZONE VARCHAR(50),
  LANG VARCHAR(20)
);

CREATE TABLE "public"."SSO_BUSINESS_UNITS_T" (
  UNIT_ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  NAME VARCHAR(50),
  CODE VARCHAR(50),
  DESCRIPTION TEXT,
  STATUS VARCHAR(20),
  CREATED_DATE VARCHAR(50),
  IMG_URL TEXT
);
CREATE INDEX idx_business_units_status ON "public"."SSO_BUSINESS_UNITS_T" (STATUS);
CREATE INDEX idx_business_units_code ON "public"."SSO_BUSINESS_UNITS_T" (CODE);


CREATE TABLE "public"."SSO_BUSINESS_LOCATIONS_T" (
  LOCATION_ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  STREET_NAME VARCHAR(100),
  STREET_NUMBER VARCHAR(20),
  NEIGHBORHOOD VARCHAR(10),
  CITY VARCHAR(100),
  STATE VARCHAR(100),
  POSTAL_CODE VARCHAR(10),
  COUNTRY VARCHAR(100)
);



CREATE TABLE "public"."SSO_BUSINESS_UNIT_BRANCHES_T" (
  BRANCH_ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  UNIT_ID UUID REFERENCES "public"."SSO_BUSINESS_UNITS_T"(UNIT_ID),
  NAME VARCHAR(100),
  LOCATION_ID UUID REFERENCES "public"."SSO_BUSINESS_LOCATIONS_T"(LOCATION_ID),
  IS_PRIMARY BOOLEAN DEFAULT FALSE
);
CREATE INDEX idx_unit_branch_primary ON "public"."SSO_BUSINESS_UNIT_BRANCHES_T" (UNIT_ID, IS_PRIMARY);
CREATE INDEX idx_branch_name ON "public"."SSO_BUSINESS_UNIT_BRANCHES_T" (NAME);
CREATE INDEX idx_branch_location ON "public"."SSO_BUSINESS_UNIT_BRANCHES_T" (LOCATION_ID);




CREATE TABLE "public"."SSO_USER_BUSINESS_UNIT_T" (
  ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  UNIT_ID UUID REFERENCES "public"."SSO_BUSINESS_UNITS_T"(UNIT_ID),
  JOB_TITLE VARCHAR(20),
  DEPARTMENT VARCHAR(40),
  HIRE_DATE TIMESTAMP,
  BRANCH_ID UUID REFERENCES "public"."SSO_BUSINESS_UNIT_BRANCHES_T"(BRANCH_ID),
  END_DATE TIMESTAMP
);
CREATE INDEX idx_user_unit_active ON "public"."SSO_USER_BUSINESS_UNIT_T" (USER_ID, END_DATE);




CREATE TABLE "public"."SSO_AUTH_USERS_T" (
  USER_ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  USERNAME VARCHAR(30) UNIQUE NOT NULL,
  NAME VARCHAR(30),
  LAST_NAME VARCHAR(50),
  SECOND_LAST_NAME VARCHAR(50),
  EMAIL VARCHAR(50) UNIQUE,
  PHONE VARCHAR(15),
  PASSWORD TEXT NOT NULL,
  PROFILE_PICTURE TEXT,
  STATUS VARCHAR(10),
  LAST_LOGIN TIMESTAMP,
  RESET_TOKEN VARCHAR(10),
  BIOGRAFIA TEXT,
  CREATED_DATE TIMESTAMP DEFAULT NOW(),
  PASSWORD_RECOVERY_DATE TIMESTAMP,
  LAST_PASSWORD_CHANGE VARCHAR(50),
  ID_USER_BU UUID REFERENCES "public"."SSO_USER_BUSINESS_UNIT_T"(ID),
  ID_USER_PREFERENCE UUID REFERENCES "public"."SSO_AUTH_USER_PREFERENCES_T"(ID),
  ID_USER_2FA UUID REFERENCES "public"."SSO_AUTH_USER_2FA"(ID)
);

-- √çndices recomendados para SSO_AUTH_USERS_T
CREATE INDEX idx_sso_users_username ON "public"."SSO_AUTH_USERS_T" (USERNAME);
CREATE INDEX idx_sso_users_email ON "public"."SSO_AUTH_USERS_T" (EMAIL);
CREATE INDEX idx_sso_users_created_date ON "public"."SSO_AUTH_USERS_T" (CREATED_DATE);
CREATE INDEX idx_sso_users_authorization_code ON "public"."SSO_AUTH_USERS_T" (AUTHORIZATION_CODE);
CREATE INDEX idx_sso_users_status ON "public"."SSO_AUTH_USERS_T" (STATUS);


CREATE TABLE "public"."SSO_AUTH_ROLES_T" (
  ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  ROLE_NAME VARCHAR(50),
  ROLE_CODE VARCHAR(50),
  MODULE VARCHAR(50),
  DESCRIPTION TEXT,
  CREATED_BY VARCHAR(100),
  CREATED_DATE TIMESTAMP DEFAULT NOW(),
  IS_SYSTEM BOOLEAN DEFAULT FALSE
);
CREATE INDEX idx_roles_code ON "public"."SSO_AUTH_ROLES_T" (ROLE_CODE);


CREATE TABLE "public"."SSO_AUTH_ACCESS_T" (
  USER_ID UUID REFERENCES "public"."SSO_AUTH_USERS_T"(USER_ID),
  ROLE_ID UUID REFERENCES "public"."SSO_AUTH_ROLES_T"(ID),
  CREATED_BY VARCHAR(50),
  CREATED_DATE TIMESTAMP DEFAULT NOW(),
  PRIMARY KEY (USER_ID, ROLE_ID)
);
CREATE INDEX idx_access_by_user ON "public"."SSO_AUTH_ACCESS_T" (USER_ID);
CREATE INDEX idx_access_by_role ON "public"."SSO_AUTH_ACCESS_T" (ROLE_ID);




CREATE TABLE "public"."SSO_AUTH_TOKEN_T" (
  TOKEN_ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  USER_ID UUID REFERENCES "public"."SSO_AUTH_USERS_T"(USER_ID),
  CLIENT_ID VARCHAR(100),
  ACCESS_TOKEN TEXT,
  REFRESH_TOKEN TEXT,
  ACCESS_EXPIRES TIMESTAMP,
  REFRESH_EXPIRES TIMESTAMP,
  AGENT VARCHAR(800),
  IP_ADDRESS VARCHAR(45),
  CREATED_DATE TIMESTAMP DEFAULT NOW()
);
CREATE INDEX idx_tokens_user ON "public"."SSO_AUTH_TOKEN_T" (USER_ID);
CREATE INDEX idx_tokens_refresh_expires ON "public"."SSO_AUTH_TOKEN_T" (REFRESH_EXPIRES);
CREATE INDEX idx_tokens_access_token ON "public"."SSO_AUTH_TOKEN_T" (ACCESS_TOKEN);
CREATE INDEX idx_tokens_refresh_token ON "public"."SSO_AUTH_TOKEN_T" (REFRESH_TOKEN);
CREATE INDEX idx_tokens_client_id ON "public"."SSO_AUTH_TOKEN_T" (CLIENT_ID);
CREATE INDEX idx_tokens_created_date ON "public"."SSO_AUTH_TOKEN_T" (CREATED_DATE);



CREATE TABLE "public"."SSO_AUTH_CLIENTS_T" (
  CLIENT_ID VARCHAR(100) PRIMARY KEY,
  APP_NAME VARCHAR(100),
  CLIENT_SECRET TEXT DEFAULT encode(gen_random_bytes(16), 'hex'),
  DESCRIPTION TEXT,
  REDIRECT_CALLBACK TEXT,
  SCOPES TEXT,
  IS_ACTIVE BOOLEAN DEFAULT TRUE,
  APP_TYPE VARCHAR(20),
  CLIENT_ICON_URL TEXT,
  CREATED_BY VARCHAR(50)
);

CREATE INDEX idx_clients_active ON "public"."SSO_AUTH_CLIENTS_T" (IS_ACTIVE);
CREATE INDEX idx_clients_app_name ON "public"."SSO_AUTH_CLIENTS_T" (APP_NAME);
CREATE INDEX idx_clients_client_secret ON "public"."SSO_AUTH_CLIENTS_T" (CLIENT_ID,CLIENT_SECRET);
CREATE INDEX idx_clients_app_type ON "public"."SSO_AUTH_CLIENTS_T" (APP_TYPE);


CREATE TABLE "public"."SSO_AUTH_GRANTS_T" (
  ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  GRANTS_NAME VARCHAR(100),
  DESCRIPTION TEXT,
  ICON_TEXT VARCHAR(50),
  GRANT_CODE VARCHAR(50)
);

CREATE INDEX idx_grants_code ON "public"."SSO_AUTH_GRANTS_T" (GRANT_CODE);


CREATE TABLE "public"."SSO_AUTH_CLIENT_GRANTS_T" (
  CLIENT_ID VARCHAR(100) REFERENCES "public"."SSO_AUTH_CLIENTS_T"(CLIENT_ID),
  GRANT_ID UUID REFERENCES "public"."SSO_AUTH_GRANTS_T"(ID),
  CREATED_DATE TIMESTAMP DEFAULT NOW(),
  PRIMARY KEY (CLIENT_ID, GRANT_ID)
);


CREATE TABLE "public"."SSO_AUTH_PERMISSIONS_T" (
  ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  PERM_NAME VARCHAR(70) NOT NULL,
  PERM_CODE VARCHAR(50) NOT NULL UNIQUE,
  DESCRIPTION TEXT,
  ACTION VARCHAR(30),
  IS_SYSTEM BOOLEAN DEFAULT FALSE,
  CREATED_BY VARCHAR(50),
  CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE INDEX idx_module_action_resource ON "public"."SSO_AUTH_PERMISSIONS_T"(MODULE, ACTION, RESOURCE);
CREATE INDEX idx_is_system_perm ON "public"."SSO_AUTH_PERMISSIONS_T"(IS_SYSTEM);



CREATE TABLE "public"."SSO_AUTH_ROLE_PERMISSIONS_T" (
  ROLE_ID UUID NOT NULL,
  PERMISSION_ID UUID NOT NULL,
  GRANTED_BY VARCHAR(50),
  GRANTED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ROLE_ID, PERMISSION_ID),
  FOREIGN KEY (ROLE_ID) REFERENCES "public"."SSO_AUTH_ROLES_T"(ID),
  FOREIGN KEY (PERMISSION_ID) REFERENCES "public"."SSO_AUTH_PERMISSIONS_T"(ID)
);

CREATE TABLE "public"."SSO_AUTH_AUTHORIZATION_CODES_T" (
    ID UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    USER_ID UUID NOT NULL REFERENCES "public"."SSO_AUTH_USERS_T"(USER_ID),
    CLIENT_ID VARCHAR(100) NOT NULL REFERENCES "public"."SSO_AUTH_CLIENTS_T"(CLIENT_ID),
    AUTHORIZATION_CODE VARCHAR(50) NOT NULL UNIQUE,
    EXPIRES_AT TIMESTAMP NOT NULL,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);